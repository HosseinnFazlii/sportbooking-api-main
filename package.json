{
  "name": "sportbooking-api",
  "version": "1.0.0",
  "description": "SportBooking API (NestJS + TypeORM + Postgres)",
  "author": "Rismun",
  "private": true,
  "license": "UNLICENSED",
  "engines": {
    "node": ">=18.18 <23"
  },
  "scripts": {
    "build": "nest build",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main.js",
    "format": "prettier --write \"src/**/*.ts\"",
    "lint": "eslint \"{src,apps,libs}/**/*.ts\" --fix",
    "db:migrate": "ts-node -r tsconfig-paths/register src/scripts/run-sql-migrations.ts",
    "db:migrate:compiled": "node dist/scripts/run-sql-migrations.js",
    "docker:build": "npm run docker:build-image && npm run docker:prune",
    "docker:stop": "docker container stop api-server || true",
    "docker:start": "docker container start api-server",
    "docker:clear": "npm run docker:stop && docker container rm api-server || true",
    "docker:prune": "docker image prune -f && docker image ls -a",
    "docker:images": "docker image ls -a",
    "docker:containers": "docker container ls -a",
    "dock:net": "docker network create localnet 2>/dev/null || true",
    "dock:db:pull": "docker pull ${PG_IMAGE:-postgres:15-alpine}",
    "dock:db:up": "docker run -d --name psql-db --network localnet -e POSTGRES_USER=${DB_USER:-psql_admin} -e POSTGRES_PASSWORD=${DB_PASS:-SOME_PASSWORD} -e POSTGRES_DB=${DB_NAME:-SportBooking} -p ${DB_PORT:-5432}:5432 --restart unless-stopped --health-cmd=\"pg_isready -U ${DB_USER:-psql_admin} -d ${DB_NAME:-SportBooking} || exit 1\" --health-interval=5s --health-timeout=5s --health-retries=20 -v sportbooking_pgdata:/var/lib/postgresql/data ${PG_IMAGE:-postgres:15-alpine}",
    "db:wait": "sh -c 'until [ \"$(docker inspect -f \"{{json .State.Health.Status}}\" psql-db 2>/dev/null)\" = \"\\\"healthy\\\"\" ]; do echo Waiting for DB...; sleep 2; done; echo DB ready.'",
    "db:down": "docker rm -f psql-db 2>/dev/null || true",
    "db:volume:rm": "docker volume rm -f sportbooking_pgdata 2>/dev/null || true",
    "api:build": "docker build . -t rismun/sportbooking/api-server:latest",
    "api:up": "docker run -d --name api-server --network localnet -p ${PORT:-3030}:3030 --env-file .env.docker --restart unless-stopped rismun/sportbooking/api-server:latest",
    "api:down": "docker rm -f api-server 2>/dev/null || true",
    "api:restart": "npm run api:down && npm run api:up",
    "docker:build-image": "npm run api:build",
    "docker:run": "npm run api:up",
    "deploy:fresh": "npm run dock:net && npm run api:down && npm run db:down && npm run db:volume:rm && npm run dock:db:pull && npm run dock:db:up && npm run db:wait && npm run api:build && npm run api:up",
    "deploy:update": "npm run dock:net && npm run api:build && npm run api:restart",
    "compose:up": "docker compose up -d",
    "compose:up:build": "docker compose up -d --build",
    "compose:down": "docker compose down",
    "compose:down:vol": "docker compose down -v",
    "compose:fresh": "npm run compose:down:vol && docker compose pull db && npm run compose:up:build",
    "compose:update": "docker compose build api && docker compose up -d api"
  },
  "dependencies": {
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/typeorm": "^11.0.0",
    "axios": "^1.11.0",
    "bcryptjs": "^3.0.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^16.4.5",
    "multer": "^2.0.2",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "sharp": "^0.34.3",
    "swagger-ui-express": "^5.0.1",
    "typeorm": "^0.3.26"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.10",
    "@nestjs/schematics": "^11.0.7",
    "@nestjs/testing": "^11.1.6",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.3.1",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "eslint": "^9.35.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "jest": "^30.1.3",
    "prettier": "^3.6.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.1",
    "ts-loader": "^9.5.4",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.9.2"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
